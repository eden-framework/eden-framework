{
    "operators": {
        "Authorization": {
            "name": "Authorization",
            "methods": {
                "Auth": {
                    "name": "Auth",
                    "inputs": [
                        "AuthRequest"
                    ],
                    "outputs": [
                        "AuthResponse"
                    ]
                }
            },
            "isPush": false
        }
    },
    "models": {
        "AckFrame": {
            "name": "AckFrame",
            "imports": [],
            "fields": [
                {
                    "key": "AckRanges",
                    "type": ""
                },
                {
                    "key": "DelayTime",
                    "type": "time.Duration"
                }
            ]
        },
        "Args": {
            "name": "Args",
            "imports": [],
            "fields": [
                {
                    "key": "args",
                    "type": ""
                },
                {
                    "key": "buf",
                    "type": ""
                }
            ]
        },
        "AssignStmt": {
            "name": "AssignStmt",
            "imports": [],
            "fields": [
                {
                    "key": "Lhs",
                    "type": ""
                },
                {
                    "key": "TokPos",
                    "type": "token.Pos"
                },
                {
                    "key": "Tok",
                    "type": "token.Token"
                },
                {
                    "key": "Rhs",
                    "type": ""
                }
            ]
        },
        "AuthRequest": {
            "name": "AuthRequest",
            "imports": [
                [
                    "en",
                    "eden/eden-map-server/internal/constants/enums"
                ]
            ],
            "fields": [
                {
                    "key": "Key",
                    "type": "string"
                },
                {
                    "key": "Status",
                    "type": "en.Status"
                }
            ]
        },
        "AuthResponse": {
            "name": "AuthResponse",
            "imports": [],
            "fields": [
                {
                    "key": "Token",
                    "type": "string"
                }
            ]
        },
        "BitString": {
            "name": "BitString",
            "imports": [],
            "fields": [
                {
                    "key": "Bytes",
                    "type": ""
                },
                {
                    "key": "BitLength",
                    "type": "int"
                }
            ]
        },
        "BlockStmt": {
            "name": "BlockStmt",
            "imports": [],
            "fields": [
                {
                    "key": "Lbrace",
                    "type": "token.Pos"
                },
                {
                    "key": "List",
                    "type": ""
                },
                {
                    "key": "Rbrace",
                    "type": "token.Pos"
                }
            ]
        },
        "BranchStmt": {
            "name": "BranchStmt",
            "imports": [],
            "fields": [
                {
                    "key": "TokPos",
                    "type": "token.Pos"
                },
                {
                    "key": "Tok",
                    "type": "token.Token"
                },
                {
                    "key": "Label",
                    "type": ""
                }
            ]
        },
        "Buffer": {
            "name": "Buffer",
            "imports": [],
            "fields": [
                {
                    "key": "buf",
                    "type": ""
                },
                {
                    "key": "off",
                    "type": "int"
                },
                {
                    "key": "lastRead",
                    "type": "readOp"
                },
                {
                    "key": "buf",
                    "type": ""
                },
                {
                    "key": "index",
                    "type": "int"
                },
                {
                    "key": "deterministic",
                    "type": "bool"
                }
            ]
        },
        "Builder": {
            "name": "Builder",
            "imports": [],
            "fields": [
                {
                    "key": "addr",
                    "type": ""
                },
                {
                    "key": "buf",
                    "type": ""
                },
                {
                    "key": "err",
                    "type": "error"
                },
                {
                    "key": "result",
                    "type": ""
                },
                {
                    "key": "fixedSize",
                    "type": "bool"
                },
                {
                    "key": "child",
                    "type": ""
                },
                {
                    "key": "offset",
                    "type": "int"
                },
                {
                    "key": "pendingLenLen",
                    "type": "int"
                },
                {
                    "key": "pendingIsASN1",
                    "type": "bool"
                },
                {
                    "key": "inContinuation",
                    "type": ""
                },
                {
                    "key": "msg",
                    "type": ""
                },
                {
                    "key": "section",
                    "type": "section"
                },
                {
                    "key": "header",
                    "type": "header"
                },
                {
                    "key": "start",
                    "type": "int"
                },
                {
                    "key": "compression",
                    "type": ""
                },
                {
                    "key": "err",
                    "type": "error"
                },
                {
                    "key": "result",
                    "type": ""
                },
                {
                    "key": "fixedSize",
                    "type": "bool"
                },
                {
                    "key": "child",
                    "type": ""
                },
                {
                    "key": "offset",
                    "type": "int"
                },
                {
                    "key": "pendingLenLen",
                    "type": "int"
                },
                {
                    "key": "pendingIsASN1",
                    "type": "bool"
                },
                {
                    "key": "inContinuation",
                    "type": ""
                }
            ]
        },
        "ByteBuffer": {
            "name": "ByteBuffer",
            "imports": [],
            "fields": [
                {
                    "key": "B",
                    "type": ""
                }
            ]
        },
        "CallExpr": {
            "name": "CallExpr",
            "imports": [],
            "fields": [
                {
                    "key": "Fun",
                    "type": "Expr"
                },
                {
                    "key": "Lparen",
                    "type": "token.Pos"
                },
                {
                    "key": "Args",
                    "type": ""
                },
                {
                    "key": "Ellipsis",
                    "type": "token.Pos"
                },
                {
                    "key": "Rparen",
                    "type": "token.Pos"
                }
            ]
        },
        "CaseClause": {
            "name": "CaseClause",
            "imports": [],
            "fields": [
                {
                    "key": "Case",
                    "type": "token.Pos"
                },
                {
                    "key": "List",
                    "type": ""
                },
                {
                    "key": "Colon",
                    "type": "token.Pos"
                },
                {
                    "key": "Body",
                    "type": ""
                }
            ]
        },
        "CertificateList": {
            "name": "CertificateList",
            "imports": [],
            "fields": [
                {
                    "key": "TBSCertList",
                    "type": "TBSCertificateList"
                },
                {
                    "key": "SignatureAlgorithm",
                    "type": "AlgorithmIdentifier"
                },
                {
                    "key": "SignatureValue",
                    "type": "asn1.BitString"
                }
            ]
        },
        "ChanType": {
            "name": "ChanType",
            "imports": [],
            "fields": [
                {
                    "key": "Begin",
                    "type": "token.Pos"
                },
                {
                    "key": "Arrow",
                    "type": "token.Pos"
                },
                {
                    "key": "Dir",
                    "type": "ChanDir"
                },
                {
                    "key": "Value",
                    "type": "Expr"
                }
            ]
        },
        "CipherSuite": {
            "name": "CipherSuite",
            "imports": [],
            "fields": [
                {
                    "key": "",
                    "type": ""
                }
            ]
        },
        "ClientSessionState": {
            "name": "ClientSessionState",
            "imports": [],
            "fields": [
                {
                    "key": "sessionTicket",
                    "type": ""
                },
                {
                    "key": "vers",
                    "type": "uint16"
                },
                {
                    "key": "cipherSuite",
                    "type": "uint16"
                },
                {
                    "key": "masterSecret",
                    "type": ""
                },
                {
                    "key": "serverCertificates",
                    "type": ""
                },
                {
                    "key": "verifiedChains",
                    "type": ""
                },
                {
                    "key": "receivedAt",
                    "type": "time.Time"
                },
                {
                    "key": "nonce",
                    "type": ""
                },
                {
                    "key": "useBy",
                    "type": "time.Time"
                },
                {
                    "key": "ageAdd",
                    "type": "uint32"
                },
                {
                    "key": "sessionTicket",
                    "type": ""
                },
                {
                    "key": "vers",
                    "type": "uint16"
                },
                {
                    "key": "cipherSuite",
                    "type": "uint16"
                },
                {
                    "key": "masterSecret",
                    "type": ""
                },
                {
                    "key": "serverCertificates",
                    "type": ""
                },
                {
                    "key": "verifiedChains",
                    "type": ""
                },
                {
                    "key": "receivedAt",
                    "type": "time.Time"
                },
                {
                    "key": "nonce",
                    "type": ""
                },
                {
                    "key": "useBy",
                    "type": "time.Time"
                },
                {
                    "key": "ageAdd",
                    "type": "uint32"
                }
            ]
        },
        "CommClause": {
            "name": "CommClause",
            "imports": [],
            "fields": [
                {
                    "key": "Case",
                    "type": "token.Pos"
                },
                {
                    "key": "Comm",
                    "type": "Stmt"
                },
                {
                    "key": "Colon",
                    "type": "token.Pos"
                },
                {
                    "key": "Body",
                    "type": ""
                }
            ]
        },
        "Comment": {
            "name": "Comment",
            "imports": [],
            "fields": [
                {
                    "key": "Slash",
                    "type": "token.Pos"
                },
                {
                    "key": "Text",
                    "type": "string"
                }
            ]
        },
        "CommentGroup": {
            "name": "CommentGroup",
            "imports": [],
            "fields": [
                {
                    "key": "List",
                    "type": ""
                }
            ]
        },
        "Config": {
            "name": "Config",
            "imports": [],
            "fields": [
                {
                    "key": "Rand",
                    "type": "io.Reader"
                },
                {
                    "key": "Time",
                    "type": ""
                },
                {
                    "key": "Certificates",
                    "type": ""
                },
                {
                    "key": "NameToCertificate",
                    "type": ""
                },
                {
                    "key": "GetCertificate",
                    "type": ""
                },
                {
                    "key": "GetClientCertificate",
                    "type": ""
                },
                {
                    "key": "GetConfigForClient",
                    "type": ""
                },
                {
                    "key": "VerifyPeerCertificate",
                    "type": ""
                },
                {
                    "key": "RootCAs",
                    "type": ""
                },
                {
                    "key": "NextProtos",
                    "type": ""
                },
                {
                    "key": "ServerName",
                    "type": "string"
                },
                {
                    "key": "ClientAuth",
                    "type": "ClientAuthType"
                },
                {
                    "key": "ClientCAs",
                    "type": ""
                },
                {
                    "key": "InsecureSkipVerify",
                    "type": "bool"
                },
                {
                    "key": "CipherSuites",
                    "type": ""
                },
                {
                    "key": "PreferServerCipherSuites",
                    "type": "bool"
                },
                {
                    "key": "SessionTicketsDisabled",
                    "type": "bool"
                },
                {
                    "key": "SessionTicketKey",
                    "type": ""
                },
                {
                    "key": "ClientSessionCache",
                    "type": "ClientSessionCache"
                },
                {
                    "key": "MinVersion",
                    "type": "uint16"
                },
                {
                    "key": "MaxVersion",
                    "type": "uint16"
                },
                {
                    "key": "CurvePreferences",
                    "type": ""
                },
                {
                    "key": "DynamicRecordSizingDisabled",
                    "type": "bool"
                },
                {
                    "key": "Renegotiation",
                    "type": "RenegotiationSupport"
                },
                {
                    "key": "KeyLogWriter",
                    "type": "io.Writer"
                },
                {
                    "key": "serverInitOnce",
                    "type": "sync.Once"
                },
                {
                    "key": "mutex",
                    "type": "sync.RWMutex"
                },
                {
                    "key": "sessionTicketKeys",
                    "type": ""
                },
                {
                    "key": "HTTPProxy",
                    "type": "string"
                },
                {
                    "key": "HTTPSProxy",
                    "type": "string"
                },
                {
                    "key": "NoProxy",
                    "type": "string"
                },
                {
                    "key": "CGI",
                    "type": "bool"
                },
                {
                    "key": "Rand",
                    "type": "io.Reader"
                },
                {
                    "key": "Time",
                    "type": ""
                },
                {
                    "key": "Certificates",
                    "type": ""
                },
                {
                    "key": "NameToCertificate",
                    "type": ""
                },
                {
                    "key": "GetCertificate",
                    "type": ""
                },
                {
                    "key": "GetClientCertificate",
                    "type": ""
                },
                {
                    "key": "GetConfigForClient",
                    "type": ""
                },
                {
                    "key": "VerifyPeerCertificate",
                    "type": ""
                },
                {
                    "key": "RootCAs",
                    "type": ""
                },
                {
                    "key": "NextProtos",
                    "type": ""
                },
                {
                    "key": "ServerName",
                    "type": "string"
                },
                {
                    "key": "ClientAuth",
                    "type": "ClientAuthType"
                },
                {
                    "key": "ClientCAs",
                    "type": ""
                },
                {
                    "key": "InsecureSkipVerify",
                    "type": "bool"
                },
                {
                    "key": "CipherSuites",
                    "type": ""
                },
                {
                    "key": "PreferServerCipherSuites",
                    "type": "bool"
                },
                {
                    "key": "SessionTicketsDisabled",
                    "type": "bool"
                },
                {
                    "key": "SessionTicketKey",
                    "type": ""
                },
                {
                    "key": "ClientSessionCache",
                    "type": "ClientSessionCache"
                },
                {
                    "key": "MinVersion",
                    "type": "uint16"
                },
                {
                    "key": "MaxVersion",
                    "type": "uint16"
                },
                {
                    "key": "CurvePreferences",
                    "type": ""
                },
                {
                    "key": "DynamicRecordSizingDisabled",
                    "type": "bool"
                },
                {
                    "key": "Renegotiation",
                    "type": "RenegotiationSupport"
                },
                {
                    "key": "KeyLogWriter",
                    "type": "io.Writer"
                },
                {
                    "key": "GetExtensions",
                    "type": ""
                },
                {
                    "key": "ReceivedExtensions",
                    "type": ""
                },
                {
                    "key": "serverInitOnce",
                    "type": "sync.Once"
                },
                {
                    "key": "mutex",
                    "type": "sync.RWMutex"
                },
                {
                    "key": "sessionTicketKeys",
                    "type": ""
                },
                {
                    "key": "AlternativeRecordLayer",
                    "type": "RecordLayer"
                },
                {
                    "key": "Versions",
                    "type": ""
                },
                {
                    "key": "ConnectionIDLength",
                    "type": "int"
                },
                {
                    "key": "HandshakeTimeout",
                    "type": "time.Duration"
                },
                {
                    "key": "IdleTimeout",
                    "type": "time.Duration"
                },
                {
                    "key": "AcceptCookie",
                    "type": ""
                },
                {
                    "key": "MaxReceiveStreamFlowControlWindow",
                    "type": "uint64"
                },
                {
                    "key": "MaxReceiveConnectionFlowControlWindow",
                    "type": "uint64"
                },
                {
                    "key": "MaxIncomingStreams",
                    "type": "int"
                },
                {
                    "key": "MaxIncomingUniStreams",
                    "type": "int"
                },
                {
                    "key": "StatelessResetKey",
                    "type": ""
                },
                {
                    "key": "KeepAlive",
                    "type": "bool"
                }
            ]
        },
        "ConnectionCloseFrame": {
            "name": "ConnectionCloseFrame",
            "imports": [],
            "fields": [
                {
                    "key": "IsApplicationError",
                    "type": "bool"
                },
                {
                    "key": "ErrorCode",
                    "type": "qerr.ErrorCode"
                },
                {
                    "key": "ReasonPhrase",
                    "type": "string"
                }
            ]
        },
        "CryptoFrame": {
            "name": "CryptoFrame",
            "imports": [],
            "fields": [
                {
                    "key": "Offset",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "Data",
                    "type": ""
                }
            ]
        },
        "Encoder": {
            "name": "Encoder",
            "imports": [],
            "fields": [
                {
                    "key": "w",
                    "type": "io.Writer"
                },
                {
                    "key": "err",
                    "type": "error"
                },
                {
                    "key": "escapeHTML",
                    "type": "bool"
                },
                {
                    "key": "indentBuf",
                    "type": ""
                },
                {
                    "key": "indentPrefix",
                    "type": "string"
                },
                {
                    "key": "indentValue",
                    "type": "string"
                },
                {
                    "key": "encoder",
                    "type": ""
                },
                {
                    "key": "p",
                    "type": "printer"
                },
                {
                    "key": "dynTab",
                    "type": "dynamicTable"
                },
                {
                    "key": "minSize",
                    "type": "uint32"
                },
                {
                    "key": "maxSizeLimit",
                    "type": "uint32"
                },
                {
                    "key": "tableSizeUpdate",
                    "type": "bool"
                },
                {
                    "key": "w",
                    "type": "io.Writer"
                },
                {
                    "key": "buf",
                    "type": ""
                }
            ]
        },
        "ExtendedHeader": {
            "name": "ExtendedHeader",
            "imports": [],
            "fields": [
                {
                    "key": "",
                    "type": "Header"
                },
                {
                    "key": "typeByte",
                    "type": "byte"
                },
                {
                    "key": "PacketNumberLen",
                    "type": "protocol.PacketNumberLen"
                },
                {
                    "key": "PacketNumber",
                    "type": "protocol.PacketNumber"
                },
                {
                    "key": "KeyPhase",
                    "type": "int"
                }
            ]
        },
        "Field": {
            "name": "Field",
            "imports": [],
            "fields": [
                {
                    "key": "Doc",
                    "type": ""
                },
                {
                    "key": "Names",
                    "type": ""
                },
                {
                    "key": "Type",
                    "type": "Expr"
                },
                {
                    "key": "Tag",
                    "type": ""
                },
                {
                    "key": "Comment",
                    "type": ""
                }
            ]
        },
        "FieldList": {
            "name": "FieldList",
            "imports": [],
            "fields": [
                {
                    "key": "Opening",
                    "type": "token.Pos"
                },
                {
                    "key": "List",
                    "type": ""
                },
                {
                    "key": "Closing",
                    "type": "token.Pos"
                }
            ]
        },
        "File": {
            "name": "File",
            "imports": [],
            "fields": [
                {
                    "key": "",
                    "type": ""
                },
                {
                    "key": "set",
                    "type": ""
                },
                {
                    "key": "name",
                    "type": "string"
                },
                {
                    "key": "base",
                    "type": "int"
                },
                {
                    "key": "size",
                    "type": "int"
                },
                {
                    "key": "mutex",
                    "type": "sync.Mutex"
                },
                {
                    "key": "lines",
                    "type": ""
                },
                {
                    "key": "infos",
                    "type": ""
                },
                {
                    "key": "Doc",
                    "type": ""
                },
                {
                    "key": "Package",
                    "type": "token.Pos"
                },
                {
                    "key": "Name",
                    "type": ""
                },
                {
                    "key": "Decls",
                    "type": ""
                },
                {
                    "key": "Scope",
                    "type": ""
                },
                {
                    "key": "Imports",
                    "type": ""
                },
                {
                    "key": "Unresolved",
                    "type": ""
                },
                {
                    "key": "Comments",
                    "type": ""
                }
            ]
        },
        "FileSet": {
            "name": "FileSet",
            "imports": [],
            "fields": [
                {
                    "key": "mutex",
                    "type": "sync.RWMutex"
                },
                {
                    "key": "base",
                    "type": "int"
                },
                {
                    "key": "files",
                    "type": ""
                },
                {
                    "key": "last",
                    "type": ""
                }
            ]
        },
        "FuncDecl": {
            "name": "FuncDecl",
            "imports": [],
            "fields": [
                {
                    "key": "Doc",
                    "type": ""
                },
                {
                    "key": "Recv",
                    "type": ""
                },
                {
                    "key": "Name",
                    "type": ""
                },
                {
                    "key": "Type",
                    "type": ""
                },
                {
                    "key": "Body",
                    "type": ""
                }
            ]
        },
        "FuncType": {
            "name": "FuncType",
            "imports": [],
            "fields": [
                {
                    "key": "Func",
                    "type": "token.Pos"
                },
                {
                    "key": "Params",
                    "type": ""
                },
                {
                    "key": "Results",
                    "type": ""
                }
            ]
        },
        "GenDecl": {
            "name": "GenDecl",
            "imports": [],
            "fields": [
                {
                    "key": "Doc",
                    "type": ""
                },
                {
                    "key": "TokPos",
                    "type": "token.Pos"
                },
                {
                    "key": "Tok",
                    "type": "token.Token"
                },
                {
                    "key": "Lparen",
                    "type": "token.Pos"
                },
                {
                    "key": "Specs",
                    "type": ""
                },
                {
                    "key": "Rparen",
                    "type": "token.Pos"
                }
            ]
        },
        "Group": {
            "name": "Group",
            "imports": [],
            "fields": [
                {
                    "key": "mu",
                    "type": "sync.Mutex"
                },
                {
                    "key": "m",
                    "type": ""
                },
                {
                    "key": "Gid",
                    "type": "string"
                },
                {
                    "key": "Name",
                    "type": "string"
                }
            ]
        },
        "Header": {
            "name": "Header",
            "imports": [],
            "fields": [
                {
                    "key": "ID",
                    "type": "uint16"
                },
                {
                    "key": "Response",
                    "type": "bool"
                },
                {
                    "key": "OpCode",
                    "type": "OpCode"
                },
                {
                    "key": "Authoritative",
                    "type": "bool"
                },
                {
                    "key": "Truncated",
                    "type": "bool"
                },
                {
                    "key": "RecursionDesired",
                    "type": "bool"
                },
                {
                    "key": "RecursionAvailable",
                    "type": "bool"
                },
                {
                    "key": "RCode",
                    "type": "RCode"
                },
                {
                    "key": "Comment",
                    "type": "string"
                },
                {
                    "key": "Extra",
                    "type": ""
                },
                {
                    "key": "ModTime",
                    "type": "time.Time"
                },
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "OS",
                    "type": "byte"
                },
                {
                    "key": "Typeflag",
                    "type": "byte"
                },
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "Linkname",
                    "type": "string"
                },
                {
                    "key": "Size",
                    "type": "int64"
                },
                {
                    "key": "Mode",
                    "type": "int64"
                },
                {
                    "key": "Uid",
                    "type": "int"
                },
                {
                    "key": "Gid",
                    "type": "int"
                },
                {
                    "key": "Uname",
                    "type": "string"
                },
                {
                    "key": "Gname",
                    "type": "string"
                },
                {
                    "key": "ModTime",
                    "type": "time.Time"
                },
                {
                    "key": "AccessTime",
                    "type": "time.Time"
                },
                {
                    "key": "ChangeTime",
                    "type": "time.Time"
                },
                {
                    "key": "Devmajor",
                    "type": "int64"
                },
                {
                    "key": "Devminor",
                    "type": "int64"
                },
                {
                    "key": "Xattrs",
                    "type": ""
                },
                {
                    "key": "PAXRecords",
                    "type": ""
                },
                {
                    "key": "Format",
                    "type": "Format"
                },
                {
                    "key": "Version",
                    "type": "protocol.VersionNumber"
                },
                {
                    "key": "SrcConnectionID",
                    "type": "protocol.ConnectionID"
                },
                {
                    "key": "DestConnectionID",
                    "type": "protocol.ConnectionID"
                },
                {
                    "key": "IsLongHeader",
                    "type": "bool"
                },
                {
                    "key": "Type",
                    "type": "protocol.PacketType"
                },
                {
                    "key": "Length",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "Token",
                    "type": ""
                },
                {
                    "key": "SupportedVersions",
                    "type": ""
                },
                {
                    "key": "OrigDestConnectionID",
                    "type": "protocol.ConnectionID"
                },
                {
                    "key": "typeByte",
                    "type": "byte"
                },
                {
                    "key": "parsedLen",
                    "type": "protocol.ByteCount"
                }
            ]
        },
        "Ident": {
            "name": "Ident",
            "imports": [],
            "fields": [
                {
                    "key": "NamePos",
                    "type": "token.Pos"
                },
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "Obj",
                    "type": ""
                }
            ]
        },
        "IfStmt": {
            "name": "IfStmt",
            "imports": [],
            "fields": [
                {
                    "key": "If",
                    "type": "token.Pos"
                },
                {
                    "key": "Init",
                    "type": "Stmt"
                },
                {
                    "key": "Cond",
                    "type": "Expr"
                },
                {
                    "key": "Body",
                    "type": ""
                },
                {
                    "key": "Else",
                    "type": "Stmt"
                }
            ]
        },
        "Inst": {
            "name": "Inst",
            "imports": [],
            "fields": [
                {
                    "key": "Op",
                    "type": "InstOp"
                },
                {
                    "key": "Out",
                    "type": "uint32"
                },
                {
                    "key": "Arg",
                    "type": "uint32"
                },
                {
                    "key": "Rune",
                    "type": ""
                }
            ]
        },
        "Int": {
            "name": "Int",
            "imports": [],
            "fields": [
                {
                    "key": "neg",
                    "type": "bool"
                },
                {
                    "key": "abs",
                    "type": "nat"
                }
            ]
        },
        "InterfaceType": {
            "name": "InterfaceType",
            "imports": [],
            "fields": [
                {
                    "key": "Interface",
                    "type": "token.Pos"
                },
                {
                    "key": "Methods",
                    "type": ""
                },
                {
                    "key": "Incomplete",
                    "type": "bool"
                }
            ]
        },
        "Listener": {
            "name": "Listener",
            "imports": [
                [
                    "quic",
                    "github.com/lucas-clemente/quic-go"
                ]
            ],
            "fields": [
                {
                    "key": "lis",
                    "type": "quic.Listener"
                },
                {
                    "key": "conn",
                    "type": "net.PacketConn"
                }
            ]
        },
        "MapType": {
            "name": "MapType",
            "imports": [],
            "fields": [
                {
                    "key": "Map",
                    "type": "token.Pos"
                },
                {
                    "key": "Key",
                    "type": "Expr"
                },
                {
                    "key": "Value",
                    "type": "Expr"
                }
            ]
        },
        "MaxDataFrame": {
            "name": "MaxDataFrame",
            "imports": [],
            "fields": [
                {
                    "key": "ByteOffset",
                    "type": "protocol.ByteCount"
                }
            ]
        },
        "MaxStreamDataFrame": {
            "name": "MaxStreamDataFrame",
            "imports": [],
            "fields": [
                {
                    "key": "StreamID",
                    "type": "protocol.StreamID"
                },
                {
                    "key": "ByteOffset",
                    "type": "protocol.ByteCount"
                }
            ]
        },
        "MaxStreamsFrame": {
            "name": "MaxStreamsFrame",
            "imports": [],
            "fields": [
                {
                    "key": "Type",
                    "type": "protocol.StreamType"
                },
                {
                    "key": "MaxStreams",
                    "type": "uint64"
                }
            ]
        },
        "NumberNode": {
            "name": "NumberNode",
            "imports": [],
            "fields": [
                {
                    "key": "",
                    "type": "NodeType"
                },
                {
                    "key": "",
                    "type": "Pos"
                },
                {
                    "key": "tr",
                    "type": ""
                },
                {
                    "key": "IsInt",
                    "type": "bool"
                },
                {
                    "key": "IsUint",
                    "type": "bool"
                },
                {
                    "key": "IsFloat",
                    "type": "bool"
                },
                {
                    "key": "IsComplex",
                    "type": "bool"
                },
                {
                    "key": "Int64",
                    "type": "int64"
                },
                {
                    "key": "Uint64",
                    "type": "uint64"
                },
                {
                    "key": "Float64",
                    "type": "float64"
                },
                {
                    "key": "Complex128",
                    "type": "complex128"
                },
                {
                    "key": "Text",
                    "type": "string"
                }
            ]
        },
        "ObjectIdentifier": {
            "name": "ObjectIdentifier",
            "imports": [],
            "fields": []
        },
        "Package": {
            "name": "Package",
            "imports": [],
            "fields": [
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "Scope",
                    "type": ""
                },
                {
                    "key": "Imports",
                    "type": ""
                },
                {
                    "key": "Files",
                    "type": ""
                },
                {
                    "key": "Doc",
                    "type": "string"
                },
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "ImportPath",
                    "type": "string"
                },
                {
                    "key": "Imports",
                    "type": ""
                },
                {
                    "key": "Filenames",
                    "type": ""
                },
                {
                    "key": "Notes",
                    "type": ""
                },
                {
                    "key": "Bugs",
                    "type": ""
                },
                {
                    "key": "Consts",
                    "type": ""
                },
                {
                    "key": "Types",
                    "type": ""
                },
                {
                    "key": "Vars",
                    "type": ""
                },
                {
                    "key": "Funcs",
                    "type": ""
                },
                {
                    "key": "Dir",
                    "type": "string"
                },
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "ImportComment",
                    "type": "string"
                },
                {
                    "key": "Doc",
                    "type": "string"
                },
                {
                    "key": "ImportPath",
                    "type": "string"
                },
                {
                    "key": "Root",
                    "type": "string"
                },
                {
                    "key": "SrcRoot",
                    "type": "string"
                },
                {
                    "key": "PkgRoot",
                    "type": "string"
                },
                {
                    "key": "PkgTargetRoot",
                    "type": "string"
                },
                {
                    "key": "BinDir",
                    "type": "string"
                },
                {
                    "key": "Goroot",
                    "type": "bool"
                },
                {
                    "key": "PkgObj",
                    "type": "string"
                },
                {
                    "key": "AllTags",
                    "type": ""
                },
                {
                    "key": "ConflictDir",
                    "type": "string"
                },
                {
                    "key": "BinaryOnly",
                    "type": "bool"
                },
                {
                    "key": "GoFiles",
                    "type": ""
                },
                {
                    "key": "CgoFiles",
                    "type": ""
                },
                {
                    "key": "IgnoredGoFiles",
                    "type": ""
                },
                {
                    "key": "InvalidGoFiles",
                    "type": ""
                },
                {
                    "key": "CFiles",
                    "type": ""
                },
                {
                    "key": "CXXFiles",
                    "type": ""
                },
                {
                    "key": "MFiles",
                    "type": ""
                },
                {
                    "key": "HFiles",
                    "type": ""
                },
                {
                    "key": "FFiles",
                    "type": ""
                },
                {
                    "key": "SFiles",
                    "type": ""
                },
                {
                    "key": "SwigFiles",
                    "type": ""
                },
                {
                    "key": "SwigCXXFiles",
                    "type": ""
                },
                {
                    "key": "SysoFiles",
                    "type": ""
                },
                {
                    "key": "CgoCFLAGS",
                    "type": ""
                },
                {
                    "key": "CgoCPPFLAGS",
                    "type": ""
                },
                {
                    "key": "CgoCXXFLAGS",
                    "type": ""
                },
                {
                    "key": "CgoFFLAGS",
                    "type": ""
                },
                {
                    "key": "CgoLDFLAGS",
                    "type": ""
                },
                {
                    "key": "CgoPkgConfig",
                    "type": ""
                },
                {
                    "key": "Imports",
                    "type": ""
                },
                {
                    "key": "ImportPos",
                    "type": ""
                },
                {
                    "key": "TestGoFiles",
                    "type": ""
                },
                {
                    "key": "TestImports",
                    "type": ""
                },
                {
                    "key": "TestImportPos",
                    "type": ""
                },
                {
                    "key": "XTestGoFiles",
                    "type": ""
                },
                {
                    "key": "XTestImports",
                    "type": ""
                },
                {
                    "key": "XTestImportPos",
                    "type": ""
                }
            ]
        },
        "Packet": {
            "name": "Packet",
            "imports": [],
            "fields": [
                {
                    "key": "PacketNumber",
                    "type": "protocol.PacketNumber"
                },
                {
                    "key": "PacketType",
                    "type": "protocol.PacketType"
                },
                {
                    "key": "Frames",
                    "type": ""
                },
                {
                    "key": "Length",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "EncryptionLevel",
                    "type": "protocol.EncryptionLevel"
                },
                {
                    "key": "SendTime",
                    "type": "time.Time"
                },
                {
                    "key": "largestAcked",
                    "type": "protocol.PacketNumber"
                },
                {
                    "key": "canBeRetransmitted",
                    "type": "bool"
                },
                {
                    "key": "includedInBytesInFlight",
                    "type": "bool"
                },
                {
                    "key": "retransmittedAs",
                    "type": ""
                },
                {
                    "key": "isRetransmission",
                    "type": "bool"
                },
                {
                    "key": "retransmissionOf",
                    "type": "protocol.PacketNumber"
                }
            ]
        },
        "PathChallengeFrame": {
            "name": "PathChallengeFrame",
            "imports": [],
            "fields": [
                {
                    "key": "Data",
                    "type": ""
                }
            ]
        },
        "Prog": {
            "name": "Prog",
            "imports": [],
            "fields": [
                {
                    "key": "Inst",
                    "type": ""
                },
                {
                    "key": "Start",
                    "type": "int"
                },
                {
                    "key": "NumCap",
                    "type": "int"
                }
            ]
        },
        "QuicError": {
            "name": "QuicError",
            "imports": [],
            "fields": [
                {
                    "key": "ErrorCode",
                    "type": "ErrorCode"
                },
                {
                    "key": "ErrorMessage",
                    "type": "string"
                },
                {
                    "key": "isTimeout",
                    "type": "bool"
                }
            ]
        },
        "Rand": {
            "name": "Rand",
            "imports": [],
            "fields": [
                {
                    "key": "src",
                    "type": "Source"
                },
                {
                    "key": "s64",
                    "type": "Source64"
                },
                {
                    "key": "readVal",
                    "type": "int64"
                },
                {
                    "key": "readPos",
                    "type": "int8"
                }
            ]
        },
        "Reader": {
            "name": "Reader",
            "imports": [],
            "fields": [
                {
                    "key": "s",
                    "type": ""
                },
                {
                    "key": "i",
                    "type": "int64"
                },
                {
                    "key": "prevRune",
                    "type": "int"
                },
                {
                    "key": "buf",
                    "type": ""
                },
                {
                    "key": "rd",
                    "type": "io.Reader"
                },
                {
                    "key": "r",
                    "type": "int"
                },
                {
                    "key": "err",
                    "type": "error"
                },
                {
                    "key": "lastByte",
                    "type": "int"
                },
                {
                    "key": "lastRuneSize",
                    "type": "int"
                },
                {
                    "key": "s",
                    "type": "string"
                },
                {
                    "key": "i",
                    "type": "int64"
                },
                {
                    "key": "prevRune",
                    "type": "int"
                },
                {
                    "key": "",
                    "type": "Header"
                },
                {
                    "key": "r",
                    "type": "flate.Reader"
                },
                {
                    "key": "decompressor",
                    "type": "io.ReadCloser"
                },
                {
                    "key": "digest",
                    "type": "uint32"
                },
                {
                    "key": "size",
                    "type": "uint32"
                },
                {
                    "key": "buf",
                    "type": ""
                },
                {
                    "key": "err",
                    "type": "error"
                },
                {
                    "key": "multistream",
                    "type": "bool"
                },
                {
                    "key": "r",
                    "type": "io.Reader"
                },
                {
                    "key": "t",
                    "type": "Transformer"
                },
                {
                    "key": "err",
                    "type": "error"
                },
                {
                    "key": "dst",
                    "type": ""
                },
                {
                    "key": "dst0",
                    "type": "int"
                },
                {
                    "key": "src",
                    "type": ""
                },
                {
                    "key": "src0",
                    "type": "int"
                },
                {
                    "key": "transformComplete",
                    "type": "bool"
                },
                {
                    "key": "R",
                    "type": ""
                },
                {
                    "key": "dot",
                    "type": ""
                },
                {
                    "key": "buf",
                    "type": ""
                },
                {
                    "key": "br",
                    "type": ""
                },
                {
                    "key": "rerr",
                    "type": "error"
                },
                {
                    "key": "line",
                    "type": ""
                },
                {
                    "key": "bufReader",
                    "type": ""
                },
                {
                    "key": "currentPart",
                    "type": ""
                },
                {
                    "key": "partsRead",
                    "type": "int"
                },
                {
                    "key": "nl",
                    "type": ""
                },
                {
                    "key": "nlDashBoundary",
                    "type": ""
                },
                {
                    "key": "dashBoundaryDash",
                    "type": ""
                },
                {
                    "key": "dashBoundary",
                    "type": ""
                },
                {
                    "key": "r",
                    "type": "io.Reader"
                },
                {
                    "key": "pad",
                    "type": "int64"
                },
                {
                    "key": "curr",
                    "type": "fileReader"
                },
                {
                    "key": "blk",
                    "type": "block"
                },
                {
                    "key": "err",
                    "type": "error"
                }
            ]
        },
        "Regexp": {
            "name": "Regexp",
            "imports": [],
            "fields": [
                {
                    "key": "Op",
                    "type": "Op"
                },
                {
                    "key": "Flags",
                    "type": "Flags"
                },
                {
                    "key": "Sub",
                    "type": ""
                },
                {
                    "key": "Sub0",
                    "type": ""
                },
                {
                    "key": "Rune",
                    "type": ""
                },
                {
                    "key": "Rune0",
                    "type": ""
                },
                {
                    "key": "Min",
                    "type": "int"
                },
                {
                    "key": "Cap",
                    "type": "int"
                },
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "expr",
                    "type": "string"
                },
                {
                    "key": "prog",
                    "type": ""
                },
                {
                    "key": "onepass",
                    "type": ""
                },
                {
                    "key": "numSubexp",
                    "type": "int"
                },
                {
                    "key": "maxBitStateLen",
                    "type": "int"
                },
                {
                    "key": "subexpNames",
                    "type": ""
                },
                {
                    "key": "prefix",
                    "type": "string"
                },
                {
                    "key": "prefixBytes",
                    "type": ""
                },
                {
                    "key": "prefixRune",
                    "type": "rune"
                },
                {
                    "key": "prefixEnd",
                    "type": "uint32"
                },
                {
                    "key": "mpool",
                    "type": "int"
                },
                {
                    "key": "matchcap",
                    "type": "int"
                },
                {
                    "key": "prefixComplete",
                    "type": "bool"
                },
                {
                    "key": "cond",
                    "type": "syntax.EmptyOp"
                },
                {
                    "key": "minInputLen",
                    "type": "int"
                },
                {
                    "key": "longest",
                    "type": "bool"
                },
                {
                    "key": "str",
                    "type": "string"
                },
                {
                    "key": "once",
                    "type": "sync.Once"
                },
                {
                    "key": "rx",
                    "type": ""
                }
            ]
        },
        "ResetStreamFrame": {
            "name": "ResetStreamFrame",
            "imports": [],
            "fields": [
                {
                    "key": "StreamID",
                    "type": "protocol.StreamID"
                },
                {
                    "key": "ErrorCode",
                    "type": "protocol.ApplicationErrorCode"
                },
                {
                    "key": "ByteOffset",
                    "type": "protocol.ByteCount"
                }
            ]
        },
        "ReturnStmt": {
            "name": "ReturnStmt",
            "imports": [],
            "fields": [
                {
                    "key": "Return",
                    "type": "token.Pos"
                },
                {
                    "key": "Results",
                    "type": ""
                }
            ]
        },
        "Scope": {
            "name": "Scope",
            "imports": [],
            "fields": [
                {
                    "key": "Outer",
                    "type": ""
                },
                {
                    "key": "Objects",
                    "type": ""
                }
            ]
        },
        "SelectStmt": {
            "name": "SelectStmt",
            "imports": [],
            "fields": [
                {
                    "key": "Select",
                    "type": "token.Pos"
                },
                {
                    "key": "Body",
                    "type": ""
                }
            ]
        },
        "StarExpr": {
            "name": "StarExpr",
            "imports": [],
            "fields": [
                {
                    "key": "Star",
                    "type": "token.Pos"
                },
                {
                    "key": "X",
                    "type": "Expr"
                }
            ]
        },
        "Stat_t": {
            "name": "Stat_t",
            "imports": [],
            "fields": [
                {
                    "key": "Dev",
                    "type": "int32"
                },
                {
                    "key": "Mode",
                    "type": "uint16"
                },
                {
                    "key": "Nlink",
                    "type": "uint16"
                },
                {
                    "key": "Ino",
                    "type": "uint64"
                },
                {
                    "key": "Uid",
                    "type": "uint32"
                },
                {
                    "key": "Gid",
                    "type": "uint32"
                },
                {
                    "key": "Rdev",
                    "type": "int32"
                },
                {
                    "key": "Pad_cgo_0",
                    "type": ""
                },
                {
                    "key": "Atimespec",
                    "type": "Timespec"
                },
                {
                    "key": "Mtimespec",
                    "type": "Timespec"
                },
                {
                    "key": "Ctimespec",
                    "type": "Timespec"
                },
                {
                    "key": "Birthtimespec",
                    "type": "Timespec"
                },
                {
                    "key": "Size",
                    "type": "int64"
                },
                {
                    "key": "Blocks",
                    "type": "int64"
                },
                {
                    "key": "Blksize",
                    "type": "int32"
                },
                {
                    "key": "Flags",
                    "type": "uint32"
                },
                {
                    "key": "Gen",
                    "type": "uint32"
                },
                {
                    "key": "Lspare",
                    "type": "int32"
                },
                {
                    "key": "Qspare",
                    "type": ""
                }
            ]
        },
        "StopSendingFrame": {
            "name": "StopSendingFrame",
            "imports": [],
            "fields": [
                {
                    "key": "StreamID",
                    "type": "protocol.StreamID"
                },
                {
                    "key": "ErrorCode",
                    "type": "protocol.ApplicationErrorCode"
                }
            ]
        },
        "StreamFrame": {
            "name": "StreamFrame",
            "imports": [],
            "fields": [
                {
                    "key": "StreamID",
                    "type": "protocol.StreamID"
                },
                {
                    "key": "FinBit",
                    "type": "bool"
                },
                {
                    "key": "DataLenPresent",
                    "type": "bool"
                },
                {
                    "key": "Offset",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "Data",
                    "type": ""
                }
            ]
        },
        "StructField": {
            "name": "StructField",
            "imports": [],
            "fields": [
                {
                    "key": "Name",
                    "type": "string"
                },
                {
                    "key": "PkgPath",
                    "type": "string"
                },
                {
                    "key": "Type",
                    "type": "Type"
                },
                {
                    "key": "Tag",
                    "type": "StructTag"
                },
                {
                    "key": "Offset",
                    "type": "uintptr"
                },
                {
                    "key": "Index",
                    "type": ""
                },
                {
                    "key": "Anonymous",
                    "type": "bool"
                }
            ]
        },
        "StructType": {
            "name": "StructType",
            "imports": [],
            "fields": [
                {
                    "key": "Struct",
                    "type": "token.Pos"
                },
                {
                    "key": "Fields",
                    "type": ""
                },
                {
                    "key": "Incomplete",
                    "type": "bool"
                }
            ]
        },
        "TCPListener": {
            "name": "TCPListener",
            "imports": [],
            "fields": [
                {
                    "key": "fd",
                    "type": ""
                },
                {
                    "key": "lc",
                    "type": "ListenConfig"
                }
            ]
        },
        "Time": {
            "name": "Time",
            "imports": [],
            "fields": [
                {
                    "key": "wall",
                    "type": "uint64"
                },
                {
                    "key": "ext",
                    "type": "int64"
                },
                {
                    "key": "loc",
                    "type": ""
                }
            ]
        },
        "TransportParameters": {
            "name": "TransportParameters",
            "imports": [],
            "fields": [
                {
                    "key": "InitialMaxStreamDataBidiLocal",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "InitialMaxStreamDataBidiRemote",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "InitialMaxStreamDataUni",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "InitialMaxData",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "AckDelayExponent",
                    "type": "uint8"
                },
                {
                    "key": "MaxPacketSize",
                    "type": "protocol.ByteCount"
                },
                {
                    "key": "MaxUniStreams",
                    "type": "uint64"
                },
                {
                    "key": "MaxBidiStreams",
                    "type": "uint64"
                },
                {
                    "key": "IdleTimeout",
                    "type": "time.Duration"
                },
                {
                    "key": "DisableMigration",
                    "type": "bool"
                },
                {
                    "key": "StatelessResetToken",
                    "type": ""
                },
                {
                    "key": "OriginalConnectionID",
                    "type": "protocol.ConnectionID"
                }
            ]
        },
        "TypeSpec": {
            "name": "TypeSpec",
            "imports": [],
            "fields": [
                {
                    "key": "Doc",
                    "type": ""
                },
                {
                    "key": "Name",
                    "type": ""
                },
                {
                    "key": "Assign",
                    "type": "token.Pos"
                },
                {
                    "key": "Type",
                    "type": "Expr"
                },
                {
                    "key": "Comment",
                    "type": ""
                }
            ]
        },
        "UDPAddr": {
            "name": "UDPAddr",
            "imports": [],
            "fields": [
                {
                    "key": "IP",
                    "type": "IP"
                },
                {
                    "key": "Port",
                    "type": "int"
                },
                {
                    "key": "Zone",
                    "type": "string"
                }
            ]
        },
        "URL": {
            "name": "URL",
            "imports": [],
            "fields": [
                {
                    "key": "Scheme",
                    "type": "string"
                },
                {
                    "key": "Opaque",
                    "type": "string"
                },
                {
                    "key": "User",
                    "type": ""
                },
                {
                    "key": "Host",
                    "type": "string"
                },
                {
                    "key": "Path",
                    "type": "string"
                },
                {
                    "key": "RawPath",
                    "type": "string"
                },
                {
                    "key": "ForceQuery",
                    "type": "bool"
                },
                {
                    "key": "RawQuery",
                    "type": "string"
                },
                {
                    "key": "Fragment",
                    "type": "string"
                }
            ]
        },
        "UnixListener": {
            "name": "UnixListener",
            "imports": [],
            "fields": [
                {
                    "key": "fd",
                    "type": ""
                },
                {
                    "key": "path",
                    "type": "string"
                },
                {
                    "key": "unlink",
                    "type": "bool"
                },
                {
                    "key": "unlinkOnce",
                    "type": "sync.Once"
                }
            ]
        },
        "XferPipe": {
            "name": "XferPipe",
            "imports": [],
            "fields": [
                {
                    "key": "filters",
                    "type": ""
                }
            ]
        }
    }
}